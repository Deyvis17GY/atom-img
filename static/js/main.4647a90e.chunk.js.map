{"version":3,"sources":["../../src/index.js","assets/img/Spinning.gif","App.js","index.js"],"names":["Picture","url","classPicture","isBorderRadius","alt","loaderUrl","clickProfile","children","useState","loaded","setLoaded","className","setClassName","refImg","useRef","loadImg","useCallback","styleImg","borderRadius","useEffect","onClick","style","ref","onLoad","loading","src","App","valuesProps","setValuesProps","changeValues","e","target","name","value","loader","htmlFor","type","id","placeholder","onChange","checked","changeCheckbox","ReactDOM","render","document","getElementById"],"mappings":"kQASaA,EAAU,SAAC,GAQlB,IAPJC,EAOI,EAPJA,IACAC,EAMI,EANJA,aACAC,EAKI,EALJA,eACAC,EAII,EAJJA,IACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,aACAC,EACI,EADJA,SAEA,EAA4BC,oBAA5B,GAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,mBAAlC,UAAOG,EAAP,KAAkBC,EAAlB,KACMC,EAASC,mBACTC,EAAUC,uBAAY,WAC1BN,MACAE,sBAFF,IAKMK,EAAW,CACfC,aAAcf,EAAiB,MAAQ,IAYzC,OAVAgB,qBAAU,WAIR,OAHIN,WAAkBA,UAAtB,UACEE,IAEK,WACLL,MACAE,eAED,CAACC,EAAQJ,EAAQM,EARpBI,IAWE,kCACE,4BAAQR,UAAR,EAAiCS,QAAS,yBAAMd,QAAN,IAAMA,OAAN,EAAMA,MAC7CL,EACC,yBACEoB,MADF,EAEEC,IAFF,EAGEC,OAHF,EAIEC,QAJF,OAKEb,UALF,EAMEc,IANF,EAOErB,IAAKA,IAGP,6BAASO,UAAU,mBAZvB,IAcIF,GAAUR,GACV,yBAAKU,UAAU,qBACb,yBAAKc,IAAL,EAAqBrB,IAAKA,QCzDvB,G,MAAA,IAA0B,sC,eC8C1BsB,EAvCH,WACV,IACA,EAAsClB,mBAAS,CAC7CP,IAAK,4DACLE,gBAAgB,EAChBC,IAAK,aACLF,aAAc,GACdG,UAAW,KALb,mBAAOsB,EAAP,KAAoBC,EAApB,KAOMC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdL,EAAe,2BAAKD,GAAN,kBAAoBK,EAAOC,MAO3C,OACE,uBAAMtB,UAAU,YAAhB,UACE,cAAC,EAAD,CAAST,aAAa,UAAUD,IAAK0B,EAAY1B,KAnBlC,gCAmBqDG,IAAKuB,EAAYvB,IAAKC,UAAWsB,EAAYtB,WAAa6B,EAAQ/B,eAAgBwB,EAAYxB,iBAClK,uBAAMQ,UAAU,kBAAhB,UACE,0BAASA,UAAU,mBAAnB,UACE,uBAAOwB,QAAQ,YAAYxB,UAAU,mBAArC,uBACA,uBAAOA,UAAU,mBAAmByB,KAAK,OAAOC,GAAG,YAAYC,YAAY,gEAAgEN,KAAK,YAAYO,SAAU,SAACT,GAAD,OAAOD,EAAaC,SAE5L,0BAASnB,UAAU,mBAAnB,UACE,uBAAOwB,QAAQ,MAAMxB,UAAU,mBAA/B,iBACA,uBAAOA,UAAU,mBAAmByB,KAAK,OAAOC,GAAG,MAAMC,YAAY,4DAA4DN,KAAK,MAAMO,SAAU,SAACT,GAAD,OAAOD,EAAaC,SAE5K,0BAASnB,UAAU,mBAAnB,UACE,uBAAOwB,QAAQ,eAAexB,UAAU,mBAAxC,2BACA,uBAAOA,UAAU,sBAAsByB,KAAK,WAAWC,GAAG,eAAeL,KAAK,iBAAiBO,SAAU,SAACT,GAAD,OAlB1F,SAACA,GACtB,MAA0BA,EAAEC,OAApBC,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,QACdZ,EAAe,2BAAKD,GAAN,kBAAoBK,EAAOQ,KAgB6EC,CAAeX,gBCjCzIY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.4647a90e.chunk.js","sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  Fragment\n} from 'react'\nimport './picture.scss'\n\nexport const Picture = ({\n  url,\n  classPicture,\n  isBorderRadius,\n  alt,\n  loaderUrl,\n  clickProfile,\n  children\n}) => {\n  const [loaded, setLoaded] = useState(false)\n  const [className, setClassName] = useState('hidden')\n  const refImg = useRef()\n  const loadImg = useCallback(() => {\n    setLoaded(true)\n    setClassName('a-picture__img')\n  }, [])\n\n  const styleImg = {\n    borderRadius: isBorderRadius ? '50%' : ''\n  }\n  useEffect(() => {\n    if (refImg.current && refImg.current.complete) {\n      loadImg()\n    }\n    return () => {\n      setLoaded(false)\n      setClassName('hidden')\n    }\n  }, [refImg, loaded, loadImg, className])\n\n  return (\n    <>\n      <figure className={classPicture} onClick={() => clickProfile?.()}>\n        {url ? (\n          <img\n            style={styleImg}\n            ref={refImg}\n            onLoad={loadImg}\n            loading='lazy'\n            className={className}\n            src={url}\n            alt={alt}\n          />\n        ) : (\n          <article className='a-picture__icon'>{children}</article>\n        )}\n        {!loaded && url && (\n          <div className='a-picture__loaded'>\n            <img src={loaderUrl} alt={alt} />\n          </div>\n        )}\n      </figure>\n    </>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/Spinning.4903345b.gif\";","import React, { useState } from 'react'\n\nimport { Picture } from '@deyvis17gy/atom-img'\nimport '@deyvis17gy/atom-img/dist/index.css'\nimport loader from './assets/img/Spinning.gif'\nimport './picture.scss'\n\nconst App = () => {\n  const defaultUrl = 'https://picsum.photos/600/400'\n  const [valuesProps, setValuesProps] = useState({\n    url: 'https://images5.alphacoders.com/958/thumb-1920-958580.jpg',\n    isBorderRadius: false,\n    alt: 'image test',\n    classPicture: '',\n    loaderUrl: '',\n  })\n  const changeValues = (e) => {\n    const { name, value } = e.target\n    setValuesProps({ ...valuesProps, [name]: value })\n  }\n\n  const changeCheckbox = (e) => {\n    const { name, checked } = e.target\n    setValuesProps({ ...valuesProps, [name]: checked })\n  }\n  return (\n    <main className='container'>\n      <Picture classPicture=\"picture\" url={valuesProps.url || defaultUrl} alt={valuesProps.alt} loaderUrl={valuesProps.loaderUrl || loader} isBorderRadius={valuesProps.isBorderRadius} />\n      <form className='container__form'>\n        <section className='container__group'>\n          <label htmlFor=\"preLoader\" className='container__label'>Preloader</label>\n          <input className='container__input' type=\"text\" id=\"preLoader\" placeholder='https://c.tenor.com/FBeNVFjn-EkAAAAC/ben-redblock-loading.gif' name='preloader' onChange={(e) => changeValues(e)} />\n        </section>\n        <section className='container__group'>\n          <label htmlFor=\"url\" className='container__label'>Url</label>\n          <input className='container__input' type=\"text\" id=\"url\" placeholder='https://images5.alphacoders.com/958/thumb-1920-958580.jpg' name=\"url\" onChange={(e) => changeValues(e)} />\n        </section>\n        <section className='container__group'>\n          <label htmlFor=\"borderRadius\" className='container__label'>Border Radius</label>\n          <input className='container__checkbox' type=\"checkbox\" id=\"borderRadius\" name=\"isBorderRadius\" onChange={(e) => changeCheckbox(e)} />\n        </section>\n      </form>\n    </main>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}